import java.net.*;
import java.io.*;
import java.text.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.*;


public class HelloWorld1 extends HttpServlet {


    public void doGet(HttpServletRequest request,
                    HttpServletResponse response)
        throws IOException, ServletException
    {
    	
        ResourceBundle rb =ResourceBundle.getBundle("LocalStrings",request.getLocale());
        response.setContentType("text/html; charset=UTF-8");
        request.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();
	
	String musicQuery=URLEncoder.encode(request.getParameter("musicQuery"),"UTF-8");
 	String musicType=URLEncoder.encode(request.getParameter("musicType"),"UTF-8");
	String assembledURL="http://cs-server.usc.edu://htdocs/finalVersion2.php?title="+musicQuery+"&type="+musicType;
	
	String type = request.getParameter("musicType");

	URL url = new URL(assembledURL);
	URLConnection urlConnection = url.openConnection();
	DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();


	
	String output=null;
	try
	{
        DocumentBuilder db= dbf.newDocumentBuilder();
        Document doc= db.parse(urlConnection.getInputStream());
        
        output = "{\"results\":{";
        output += "\"result\":[" ;
        NodeList music= doc.getElementsByTagName("result");
        
        for(int i=0;i<music.getLength();i++)
        {
            Node node=music.item(i);
            NamedNodeMap nm= node.getAttributes();
            
            	if(type=="artists")
            	{
            output += "{\"cover\":\""+nm.getNamedItem("cover").getNodeValue() + "\",";
            output += "\"name\":\""+nm.getNamedItem("title").getNodeValue() + "\",";
            output += "\"genre\":\""+nm.getNamedItem("year").getNodeValue() + "\",";
            output += "\"year\":\""+nm.getNamedItem("director").getNodeValue() + "\",";
            output += "\"details\":\""+nm.getNamedItem("details").getNodeValue() + "\"}";
            if(i!=music.getLength()-1)
            {
                output += ",";
            }
        
            	}
            	if(type=="albums")
            	{
            output += "{\"cover\":\""+nm.getNamedItem("cover").getNodeValue() + "\",";
            output += "\"title\":\""+nm.getNamedItem("title").getNodeValue() + "\",";
            output += "\"artist\":\""+nm.getNamedItem("artist").getNodeValue() + "\",";
            output += "\"genre\":\""+nm.getNamedItem("genre").getNodeValue() + "\",";
            output += "\"year\":\""+nm.getNamedItem("year").getNodeValue() + "\",";
            output += "\"details\":\""+nm.getNamedItem("details").getNodeValue() + "\"}";
            if(i!=music.getLength()-1)
            {
                output += ",";
            }
        
            	}
            	if(type=="songs")
            	{
            output += "{\"sample\":\""+nm.getNamedItem("samlpe").getNodeValue() + "\",";
            output += "\"title\":\""+nm.getNamedItem("title").getNodeValue() + "\",";
            output += "\"performer\":\""+nm.getNamedItem("performer").getNodeValue() + "\",";
            output += "\"composer\":\""+nm.getNamedItem("composer").getNodeValue() + "\",";
            output += "\"details\":\""+nm.getNamedItem("details").getNodeValue() + "\"}";
            if(i!=music.getLength()-1)
            {
                output += ",";
            }
        
            	}

           }
        output += "]";
	output += ",\"exception\" :[]}}"; 
        
	}   
        catch(Exception e)
    {
            output = "{\"results\":{";
            output += "\"result\":[]," ;
            output += "\"exception\" :[ {\"error\":\"Error in Server\"";
        output += "}]}}";
    }
//        catch(IOException e)
//        {
//       	    output = "{\"results\":{";
//            output += "\"result\":[]," ;
//            output += "\"exception\" :[ {\"error\":\"Server error: XML parsing failed\"";
//	    output += "}]}}";
//        } 
//	     catch(DOMException e)
//        {
//            output = "{\"results\":{";
//            output += "\"result\":[]," ;
//            output += "\"exception\" :[ {\"error\":\"Server Error: XML parsing failed\"";
//        output += "}]}}";
//        }  
//        catch(IllegalArgumentException e)
//        {
//       	    output = "{\"results\":{";
//            output += "\"result\":[]," ;
//            output += "\"exception\" :[ {\"error\":\"Server Error: Illegal arguments used\"";
//	    output += "}]}}";
//        } 
      
	
	
	out.println(output);  
    }
}



